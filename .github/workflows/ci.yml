name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # ============================================
  # Job 1: Lint and Type Check
  # ============================================
  lint-and-type-check:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: 📚 Install dependencies
      run: npm ci
    
    - name: 🔍 Run ESLint
      run: npm run lint
      continue-on-error: false
    
    - name: 🔍 Run TypeScript type check
      run: npm run type-check || echo "Type check failed - needs fixing"
      continue-on-error: true
    
    - name: 📊 Upload lint results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: lint-results
        path: |
          eslint-report.json
          typescript-report.json
        if-no-files-found: ignore

  # ============================================
  # Job 2: Build
  # ============================================
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: 📚 Install dependencies
      run: npm ci
    
    - name: 🏗️ Build application
      run: npm run build
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        NEXT_PUBLIC_APP_URL: https://moneymanager-henna.vercel.app
    
    - name: 📊 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: .next
        retention-days: 7

  # ============================================
  # Job 3: Security Scan
  # ============================================
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: 📚 Install dependencies
      run: npm ci
    
    - name: 🔍 Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: 🔍 Check for secrets in code
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
      continue-on-error: true
    
    - name: 📊 Upload security scan results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: |
          npm-audit.json
          trufflehog-results.json
        if-no-files-found: ignore

  # ============================================
  # Job 4: Test (if tests exist)
  # ============================================
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: 📚 Install dependencies
      run: npm ci
    
    - name: 🧪 Run tests
      run: npm test --if-present
      continue-on-error: true
    
    - name: 📊 Upload test coverage
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-coverage
        path: coverage
        if-no-files-found: ignore

  # ============================================
  # Job 5: Deploy Preview (for PRs)
  # ============================================
  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🚀 Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        scope: ${{ secrets.VERCEL_ORG_ID }}
      continue-on-error: true

  # ============================================
  # Job 6: Notify on Failure
  # ============================================
  notify:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build, security-scan, test]
    if: failure()
    
    steps:
    - name: 📢 Send notification
      run: |
        echo "❌ CI Pipeline failed!"
        echo "Please check the logs for details."
      # يمكنك إضافة إشعارات Slack/Discord/Email هنا

